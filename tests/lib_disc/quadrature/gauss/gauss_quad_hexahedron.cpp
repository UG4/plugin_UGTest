/*
 * Copyright (c) 2011-2013:  G-CSC, Goethe University Frankfurt
 * 
 * This file is part of UG4.
 * 
 * UG4 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License version 3 (as published by the
 * Free Software Foundation) with the following additional attribution
 * requirements (according to LGPL/GPL v3 §7):
 * 
 * (1) The following notice must be displayed in the Appropriate Legal Notices
 * of covered and combined works: "Based on UG4 (www.ug4.org/license)".
 * 
 * (2) The following notice must be displayed at a prominent place in the
 * terminal output of covered works: "Based on UG4 (www.ug4.org/license)".
 * 
 * (3) The following bibliography is recommended for citation and must be
 * preserved in all covered files:
 * "Reiter, S., Vogel, A., Heppner, I., Rupp, M., and Wittum, G. A massively
 *   parallel geometric multigrid solver on hierarchically distributed grids.
 *   Computing and visualization in science 16, 4 (2013), 151-164"
 * "Vogel, A., Reiter, S., Rupp, M., Nägel, A., and Wittum, G. UG4 -- a novel
 *   flexible software system for simulating pde based models on high performance
 *   computers. Computing and visualization in science 16, 4 (2013), 165-179"
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 */

//  This file is parsed from UG 3.9.
//  It provides the Gauss Quadratures for a reference hexahedron.


#include "../quadrature.h"
#include "gauss_quad_hexahedron.h"

namespace ug{

template <>
number GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 2>, 3, 2, 8>::m_vWeight[8] =
{
 0.12500000000000000000000000000000,
 0.12500000000000000000000000000000,
 0.12500000000000000000000000000000,
 0.12500000000000000000000000000000,
 0.12500000000000000000000000000000,
 0.12500000000000000000000000000000,
 0.12500000000000000000000000000000,
 0.12500000000000000000000000000000
};

template <>
MathVector<3> GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 2>, 3, 2, 8>::m_vPoint[8] =
{
MathVector<3>(0.21132486540518700000000000000000, 0.21132486540518700000000000000000, 0.21132486540518700000000000000000),
MathVector<3>(0.78867513459481300000000000000000, 0.21132486540518700000000000000000, 0.21132486540518700000000000000000),
MathVector<3>(0.21132486540518700000000000000000, 0.78867513459481300000000000000000, 0.21132486540518700000000000000000),
MathVector<3>(0.78867513459481300000000000000000, 0.78867513459481300000000000000000, 0.21132486540518700000000000000000),
MathVector<3>(0.21132486540518700000000000000000, 0.21132486540518700000000000000000, 0.78867513459481300000000000000000),
MathVector<3>(0.78867513459481300000000000000000, 0.21132486540518700000000000000000, 0.78867513459481300000000000000000),
MathVector<3>(0.21132486540518700000000000000000, 0.78867513459481300000000000000000, 0.78867513459481300000000000000000),
MathVector<3>(0.78867513459481300000000000000000, 0.78867513459481300000000000000000, 0.78867513459481300000000000000000)
};

template <>
number GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 3>, 3, 3, 6>::m_vWeight[6] =
{
 0.16666666666666666666666666666667,
 0.16666666666666666666666666666667,
 0.16666666666666666666666666666667,
 0.16666666666666666666666666666667,
 0.16666666666666666666666666666667,
 0.16666666666666666666666666666667
};

template <>
MathVector<3> GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 3>, 3, 3, 6>::m_vPoint[6] =
{
MathVector<3>(0.00000000000000000000000000000000, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.00000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.00000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 1.00000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 1.00000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(1.00000000000000000000000000000000, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000)
};

template <>
number GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 5>, 3, 5, 14>::m_vWeight[14] =
{
 0.11080332409972299168975069252078,
 0.11080332409972299168975069252078,
 0.11080332409972299168975069252078,
 0.11080332409972299168975069252078,
 0.11080332409972299168975069252078,
 0.11080332409972299168975069252078,
 0.04189750692520775623268698060942,
 0.04189750692520775623268698060942,
 0.04189750692520775623268698060942,
 0.04189750692520775623268698060942,
 0.04189750692520775623268698060942,
 0.04189750692520775623268698060942,
 0.04189750692520775623268698060942,
 0.04189750692520775623268698060942
};

template <>
MathVector<3> GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 5>, 3, 5, 14>::m_vPoint[14] =
{
MathVector<3>(0.10208878712288926836772558976193, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.10208878712288926836772558976193, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.10208878712288926836772558976193),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.89791121287711073163227441023807),
MathVector<3>(0.50000000000000000000000000000000, 0.89791121287711073163227441023807, 0.50000000000000000000000000000000),
MathVector<3>(0.89791121287711073163227441023807, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.12060654468033592686548286094387, 0.12060654468033592686548286094387, 0.12060654468033592686548286094387),
MathVector<3>(0.12060654468033592686548286094387, 0.12060654468033592686548286094387, 0.87939345531966407313451713905613),
MathVector<3>(0.12060654468033592686548286094387, 0.87939345531966407313451713905613, 0.12060654468033592686548286094387),
MathVector<3>(0.12060654468033592686548286094387, 0.87939345531966407313451713905613, 0.87939345531966407313451713905613),
MathVector<3>(0.87939345531966407313451713905613, 0.12060654468033592686548286094387, 0.12060654468033592686548286094387),
MathVector<3>(0.87939345531966407313451713905613, 0.12060654468033592686548286094387, 0.87939345531966407313451713905613),
MathVector<3>(0.87939345531966407313451713905613, 0.87939345531966407313451713905613, 0.12060654468033592686548286094387),
MathVector<3>(0.87939345531966407313451713905613, 0.87939345531966407313451713905613, 0.87939345531966407313451713905613)
};

template <>
number GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 7>, 3, 7, 31>::m_vWeight[31] =
{
 -0.15942028985507246376811594202898,
 0.10888888888888888888888888888889,
 0.10888888888888888888888888888889,
 0.10888888888888888888888888888889,
 0.10888888888888888888888888888889,
 0.10888888888888888888888888888889,
 0.10888888888888888888888888888889,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565,
 0.02108695652173913043478260869565
};

template <>
MathVector<3> GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 7>, 3, 7, 31>::m_vPoint[31] =
{
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.20722997811544004619368460912797, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.20722997811544004619368460912797, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.20722997811544004619368460912797),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.79277002188455995380631539087203),
MathVector<3>(0.50000000000000000000000000000000, 0.79277002188455995380631539087203, 0.50000000000000000000000000000000),
MathVector<3>(0.79277002188455995380631539087203, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.03141918071589598074447631116730, 0.15276493200414761669898709805835, 0.29217036619796743688019666371648),
MathVector<3>(0.03141918071589598074447631116730, 0.29217036619796743688019666371648, 0.84723506799585238330101290194165),
MathVector<3>(0.03141918071589598074447631116730, 0.70782963380203256311980333628352, 0.15276493200414761669898709805835),
MathVector<3>(0.03141918071589598074447631116730, 0.84723506799585238330101290194165, 0.70782963380203256311980333628352),
MathVector<3>(0.15276493200414761669898709805835, 0.03141918071589598074447631116730, 0.70782963380203256311980333628352),
MathVector<3>(0.15276493200414761669898709805835, 0.29217036619796743688019666371648, 0.03141918071589598074447631116730),
MathVector<3>(0.15276493200414761669898709805835, 0.70782963380203256311980333628352, 0.96858081928410401925552368883270),
MathVector<3>(0.15276493200414761669898709805835, 0.96858081928410401925552368883270, 0.29217036619796743688019666371648),
MathVector<3>(0.29217036619796743688019666371648, 0.03141918071589598074447631116730, 0.15276493200414761669898709805835),
MathVector<3>(0.29217036619796743688019666371648, 0.15276493200414761669898709805835, 0.96858081928410401925552368883270),
MathVector<3>(0.29217036619796743688019666371648, 0.84723506799585238330101290194165, 0.03141918071589598074447631116730),
MathVector<3>(0.29217036619796743688019666371648, 0.96858081928410401925552368883270, 0.84723506799585238330101290194165),
MathVector<3>(0.70782963380203256311980333628352, 0.03141918071589598074447631116730, 0.84723506799585238330101290194165),
MathVector<3>(0.70782963380203256311980333628352, 0.15276493200414761669898709805835, 0.03141918071589598074447631116730),
MathVector<3>(0.70782963380203256311980333628352, 0.84723506799585238330101290194165, 0.96858081928410401925552368883270),
MathVector<3>(0.70782963380203256311980333628352, 0.96858081928410401925552368883270, 0.15276493200414761669898709805835),
MathVector<3>(0.84723506799585238330101290194165, 0.03141918071589598074447631116730, 0.29217036619796743688019666371648),
MathVector<3>(0.84723506799585238330101290194165, 0.29217036619796743688019666371648, 0.96858081928410401925552368883270),
MathVector<3>(0.84723506799585238330101290194165, 0.70782963380203256311980333628352, 0.03141918071589598074447631116730),
MathVector<3>(0.84723506799585238330101290194165, 0.96858081928410401925552368883270, 0.70782963380203256311980333628352),
MathVector<3>(0.96858081928410401925552368883270, 0.15276493200414761669898709805835, 0.70782963380203256311980333628352),
MathVector<3>(0.96858081928410401925552368883270, 0.29217036619796743688019666371648, 0.15276493200414761669898709805835),
MathVector<3>(0.96858081928410401925552368883270, 0.70782963380203256311980333628352, 0.84723506799585238330101290194165),
MathVector<3>(0.96858081928410401925552368883270, 0.84723506799585238330101290194165, 0.29217036619796743688019666371648)
};

template <>
number GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 8>, 3, 8, 47>::m_vWeight[47] =
{
 0.05648796435939996131134547733744,
 0.03742239716904236496292320232202,
 0.03742239716904236496292320232202,
 0.03742239716904236496292320232202,
 0.03742239716904236496292320232202,
 0.03742239716904236496292320232202,
 0.03742239716904236496292320232202,
 0.03760951992140500249246233622390,
 0.03760951992140500249246233622390,
 0.03760951992140500249246233622390,
 0.03760951992140500249246233622390,
 0.03760951992140500249246233622390,
 0.03760951992140500249246233622390,
 0.03760951992140500249246233622390,
 0.03760951992140500249246233622390,
 0.00618554069846297657172716469644,
 0.00618554069846297657172716469644,
 0.00618554069846297657172716469644,
 0.00618554069846297657172716469644,
 0.00618554069846297657172716469644,
 0.00618554069846297657172716469644,
 0.00618554069846297657172716469644,
 0.00618554069846297657172716469644,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032,
 0.01535904865280841734989997089032
};

template <>
MathVector<3> GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 8>, 3, 8, 47>::m_vPoint[47] =
{
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.10876960178202420467359301228514, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.10876960178202420467359301228514, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.10876960178202420467359301228514),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.89123039821797579532640698771486),
MathVector<3>(0.50000000000000000000000000000000, 0.89123039821797579532640698771486, 0.50000000000000000000000000000000),
MathVector<3>(0.89123039821797579532640698771486, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.25595266514681675973663534926566, 0.25595266514681675973663534926566, 0.25595266514681675973663534926566),
MathVector<3>(0.25595266514681675973663534926566, 0.25595266514681675973663534926566, 0.74404733485318324026336465073434),
MathVector<3>(0.25595266514681675973663534926566, 0.74404733485318324026336465073434, 0.25595266514681675973663534926566),
MathVector<3>(0.25595266514681675973663534926566, 0.74404733485318324026336465073434, 0.74404733485318324026336465073434),
MathVector<3>(0.74404733485318324026336465073434, 0.25595266514681675973663534926566, 0.25595266514681675973663534926566),
MathVector<3>(0.74404733485318324026336465073434, 0.25595266514681675973663534926566, 0.74404733485318324026336465073434),
MathVector<3>(0.74404733485318324026336465073434, 0.74404733485318324026336465073434, 0.25595266514681675973663534926566),
MathVector<3>(0.74404733485318324026336465073434, 0.74404733485318324026336465073434, 0.74404733485318324026336465073434),
MathVector<3>(0.06889053616925940557178855444498, 0.06889053616925940557178855444498, 0.06889053616925940557178855444498),
MathVector<3>(0.06889053616925940557178855444498, 0.06889053616925940557178855444498, 0.93110946383074059442821144555502),
MathVector<3>(0.06889053616925940557178855444498, 0.93110946383074059442821144555502, 0.06889053616925940557178855444498),
MathVector<3>(0.06889053616925940557178855444498, 0.93110946383074059442821144555502, 0.93110946383074059442821144555502),
MathVector<3>(0.93110946383074059442821144555502, 0.06889053616925940557178855444498, 0.06889053616925940557178855444498),
MathVector<3>(0.93110946383074059442821144555502, 0.06889053616925940557178855444498, 0.93110946383074059442821144555502),
MathVector<3>(0.93110946383074059442821144555502, 0.93110946383074059442821144555502, 0.06889053616925940557178855444498),
MathVector<3>(0.93110946383074059442821144555502, 0.93110946383074059442821144555502, 0.93110946383074059442821144555502),
MathVector<3>(0.02790171085399590234065625261313, 0.15121258314638150161030413502551, 0.64055695470417092802904914092321),
MathVector<3>(0.02790171085399590234065625261313, 0.35944304529582907197095085907679, 0.15121258314638150161030413502551),
MathVector<3>(0.02790171085399590234065625261313, 0.64055695470417092802904914092321, 0.84878741685361849838969586497449),
MathVector<3>(0.02790171085399590234065625261313, 0.84878741685361849838969586497449, 0.35944304529582907197095085907679),
MathVector<3>(0.15121258314638150161030413502551, 0.02790171085399590234065625261313, 0.35944304529582907197095085907679),
MathVector<3>(0.15121258314638150161030413502551, 0.35944304529582907197095085907679, 0.97209828914600409765934374738687),
MathVector<3>(0.15121258314638150161030413502551, 0.64055695470417092802904914092321, 0.02790171085399590234065625261313),
MathVector<3>(0.15121258314638150161030413502551, 0.97209828914600409765934374738687, 0.64055695470417092802904914092321),
MathVector<3>(0.35944304529582907197095085907679, 0.02790171085399590234065625261313, 0.84878741685361849838969586497449),
MathVector<3>(0.35944304529582907197095085907679, 0.15121258314638150161030413502551, 0.02790171085399590234065625261313),
MathVector<3>(0.35944304529582907197095085907679, 0.84878741685361849838969586497449, 0.97209828914600409765934374738687),
MathVector<3>(0.35944304529582907197095085907679, 0.97209828914600409765934374738687, 0.15121258314638150161030413502551),
MathVector<3>(0.64055695470417092802904914092321, 0.02790171085399590234065625261313, 0.15121258314638150161030413502551),
MathVector<3>(0.64055695470417092802904914092321, 0.15121258314638150161030413502551, 0.97209828914600409765934374738687),
MathVector<3>(0.64055695470417092802904914092321, 0.84878741685361849838969586497449, 0.02790171085399590234065625261313),
MathVector<3>(0.64055695470417092802904914092321, 0.97209828914600409765934374738687, 0.84878741685361849838969586497449),
MathVector<3>(0.84878741685361849838969586497449, 0.02790171085399590234065625261313, 0.64055695470417092802904914092321),
MathVector<3>(0.84878741685361849838969586497449, 0.35944304529582907197095085907679, 0.02790171085399590234065625261313),
MathVector<3>(0.84878741685361849838969586497449, 0.64055695470417092802904914092321, 0.97209828914600409765934374738687),
MathVector<3>(0.84878741685361849838969586497449, 0.97209828914600409765934374738687, 0.35944304529582907197095085907679),
MathVector<3>(0.97209828914600409765934374738687, 0.15121258314638150161030413502551, 0.35944304529582907197095085907679),
MathVector<3>(0.97209828914600409765934374738687, 0.35944304529582907197095085907679, 0.84878741685361849838969586497449),
MathVector<3>(0.97209828914600409765934374738687, 0.64055695470417092802904914092321, 0.15121258314638150161030413502551),
MathVector<3>(0.97209828914600409765934374738687, 0.84878741685361849838969586497449, 0.64055695470417092802904914092321)
};

template <>
number GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 9>, 3, 9, 58>::m_vWeight[58] =
{
 0.05415937446870681787622884914929,
 0.05415937446870681787622884914929,
 0.05415937446870681787622884914929,
 0.05415937446870681787622884914929,
 0.05415937446870681787622884914929,
 0.05415937446870681787622884914929,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.01147372576702220527140557361496,
 0.02485747976800293754010858982320,
 0.02485747976800293754010858982320,
 0.02485747976800293754010858982320,
 0.02485747976800293754010858982320,
 0.02485747976800293754010858982320,
 0.02485747976800293754010858982320,
 0.02485747976800293754010858982320,
 0.02485747976800293754010858982320,
 0.00626859941241862873343143596558,
 0.00626859941241862873343143596558,
 0.00626859941241862873343143596558,
 0.00626859941241862873343143596558,
 0.00626859941241862873343143596558,
 0.00626859941241862873343143596558,
 0.00626859941241862873343143596558,
 0.00626859941241862873343143596558,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894,
 0.01201460043917167080405999230894
};

template <>
MathVector<3> GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 9>, 3, 9, 58>::m_vPoint[58] =
{
MathVector<3>(0.19315926520414550308255755512972, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.19315926520414550308255755512972, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.19315926520414550308255755512972),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.80684073479585449691744244487028),
MathVector<3>(0.50000000000000000000000000000000, 0.80684073479585449691744244487028, 0.50000000000000000000000000000000),
MathVector<3>(0.80684073479585449691744244487028, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.06115643837116085675661212050283, 0.06115643837116085675661212050283, 0.50000000000000000000000000000000),
MathVector<3>(0.06115643837116085675661212050283, 0.50000000000000000000000000000000, 0.06115643837116085675661212050283),
MathVector<3>(0.06115643837116085675661212050283, 0.50000000000000000000000000000000, 0.93884356162883914324338787949717),
MathVector<3>(0.06115643837116085675661212050283, 0.93884356162883914324338787949717, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.06115643837116085675661212050283, 0.06115643837116085675661212050283),
MathVector<3>(0.50000000000000000000000000000000, 0.06115643837116085675661212050283, 0.93884356162883914324338787949717),
MathVector<3>(0.50000000000000000000000000000000, 0.93884356162883914324338787949717, 0.06115643837116085675661212050283),
MathVector<3>(0.50000000000000000000000000000000, 0.93884356162883914324338787949717, 0.93884356162883914324338787949717),
MathVector<3>(0.93884356162883914324338787949717, 0.06115643837116085675661212050283, 0.50000000000000000000000000000000),
MathVector<3>(0.93884356162883914324338787949717, 0.50000000000000000000000000000000, 0.06115643837116085675661212050283),
MathVector<3>(0.93884356162883914324338787949717, 0.50000000000000000000000000000000, 0.93884356162883914324338787949717),
MathVector<3>(0.93884356162883914324338787949717, 0.93884356162883914324338787949717, 0.50000000000000000000000000000000),
MathVector<3>(0.21794459648998497286669050066846, 0.21794459648998497286669050066846, 0.21794459648998497286669050066846),
MathVector<3>(0.21794459648998497286669050066846, 0.21794459648998497286669050066846, 0.78205540351001502713330949933154),
MathVector<3>(0.21794459648998497286669050066846, 0.78205540351001502713330949933154, 0.21794459648998497286669050066846),
MathVector<3>(0.21794459648998497286669050066846, 0.78205540351001502713330949933154, 0.78205540351001502713330949933154),
MathVector<3>(0.78205540351001502713330949933154, 0.21794459648998497286669050066846, 0.21794459648998497286669050066846),
MathVector<3>(0.78205540351001502713330949933154, 0.21794459648998497286669050066846, 0.78205540351001502713330949933154),
MathVector<3>(0.78205540351001502713330949933154, 0.78205540351001502713330949933154, 0.21794459648998497286669050066846),
MathVector<3>(0.78205540351001502713330949933154, 0.78205540351001502713330949933154, 0.78205540351001502713330949933154),
MathVector<3>(0.06495010766901204119246809556804, 0.06495010766901204119246809556804, 0.06495010766901204119246809556804),
MathVector<3>(0.06495010766901204119246809556804, 0.06495010766901204119246809556804, 0.93504989233098795880753190443196),
MathVector<3>(0.06495010766901204119246809556804, 0.93504989233098795880753190443196, 0.06495010766901204119246809556804),
MathVector<3>(0.06495010766901204119246809556804, 0.93504989233098795880753190443196, 0.93504989233098795880753190443196),
MathVector<3>(0.93504989233098795880753190443196, 0.06495010766901204119246809556804, 0.06495010766901204119246809556804),
MathVector<3>(0.93504989233098795880753190443196, 0.06495010766901204119246809556804, 0.93504989233098795880753190443196),
MathVector<3>(0.93504989233098795880753190443196, 0.93504989233098795880753190443196, 0.06495010766901204119246809556804),
MathVector<3>(0.93504989233098795880753190443196, 0.93504989233098795880753190443196, 0.93504989233098795880753190443196),
MathVector<3>(0.03073478906766412733551156519846, 0.28386604868456891779198756924153, 0.28386604868456891779198756924153),
MathVector<3>(0.03073478906766412733551156519846, 0.28386604868456891779198756924153, 0.71613395131543108220801243075847),
MathVector<3>(0.03073478906766412733551156519846, 0.71613395131543108220801243075847, 0.28386604868456891779198756924153),
MathVector<3>(0.03073478906766412733551156519846, 0.71613395131543108220801243075847, 0.71613395131543108220801243075847),
MathVector<3>(0.28386604868456891779198756924153, 0.03073478906766412733551156519846, 0.28386604868456891779198756924153),
MathVector<3>(0.28386604868456891779198756924153, 0.03073478906766412733551156519846, 0.71613395131543108220801243075847),
MathVector<3>(0.28386604868456891779198756924153, 0.28386604868456891779198756924153, 0.03073478906766412733551156519846),
MathVector<3>(0.28386604868456891779198756924153, 0.28386604868456891779198756924153, 0.96926521093233587266448843480154),
MathVector<3>(0.28386604868456891779198756924153, 0.71613395131543108220801243075847, 0.03073478906766412733551156519846),
MathVector<3>(0.28386604868456891779198756924153, 0.71613395131543108220801243075847, 0.96926521093233587266448843480154),
MathVector<3>(0.28386604868456891779198756924153, 0.96926521093233587266448843480154, 0.28386604868456891779198756924153),
MathVector<3>(0.28386604868456891779198756924153, 0.96926521093233587266448843480154, 0.71613395131543108220801243075847),
MathVector<3>(0.71613395131543108220801243075847, 0.03073478906766412733551156519846, 0.28386604868456891779198756924153),
MathVector<3>(0.71613395131543108220801243075847, 0.03073478906766412733551156519846, 0.71613395131543108220801243075847),
MathVector<3>(0.71613395131543108220801243075847, 0.28386604868456891779198756924153, 0.03073478906766412733551156519846),
MathVector<3>(0.71613395131543108220801243075847, 0.28386604868456891779198756924153, 0.96926521093233587266448843480154),
MathVector<3>(0.71613395131543108220801243075847, 0.71613395131543108220801243075847, 0.03073478906766412733551156519846),
MathVector<3>(0.71613395131543108220801243075847, 0.71613395131543108220801243075847, 0.96926521093233587266448843480154),
MathVector<3>(0.71613395131543108220801243075847, 0.96926521093233587266448843480154, 0.28386604868456891779198756924153),
MathVector<3>(0.71613395131543108220801243075847, 0.96926521093233587266448843480154, 0.71613395131543108220801243075847),
MathVector<3>(0.96926521093233587266448843480154, 0.28386604868456891779198756924153, 0.28386604868456891779198756924153),
MathVector<3>(0.96926521093233587266448843480154, 0.28386604868456891779198756924153, 0.71613395131543108220801243075847),
MathVector<3>(0.96926521093233587266448843480154, 0.71613395131543108220801243075847, 0.28386604868456891779198756924153),
MathVector<3>(0.96926521093233587266448843480154, 0.71613395131543108220801243075847, 0.71613395131543108220801243075847)
};

template <>
number GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 11>, 3, 11, 90>::m_vWeight[90] =
{
 0.02530963420160002382316714137088,
 0.02530963420160002382316714137088,
 0.02530963420160002382316714137088,
 0.02530963420160002382316714137088,
 0.02530963420160002382316714137088,
 0.02530963420160002382316714137088,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.01814991823251446228656322509928,
 0.02699900565687114116418333329805,
 0.02699900565687114116418333329805,
 0.02699900565687114116418333329805,
 0.02699900565687114116418333329805,
 0.02699900565687114116418333329805,
 0.02699900565687114116418333329805,
 0.02699900565687114116418333329805,
 0.02699900565687114116418333329805,
 0.01469229349455703504874147550133,
 0.01469229349455703504874147550133,
 0.01469229349455703504874147550133,
 0.01469229349455703504874147550133,
 0.01469229349455703504874147550133,
 0.01469229349455703504874147550133,
 0.01469229349455703504874147550133,
 0.01469229349455703504874147550133,
 0.00558048900985365520512514428527,
 0.00558048900985365520512514428527,
 0.00558048900985365520512514428527,
 0.00558048900985365520512514428527,
 0.00558048900985365520512514428527,
 0.00558048900985365520512514428527,
 0.00558048900985365520512514428527,
 0.00558048900985365520512514428527,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00282678701735273552789952883362,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913,
 0.00768024926222941690034375557913
};

template <>
MathVector<3> GaussQuadBase<GaussQuadrature<ReferenceHexahedron, 11>, 3, 11, 90>::m_vPoint[90] =
{
MathVector<3>(0.09369283295018675180381220131013, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.09369283295018675180381220131013, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.09369283295018675180381220131013),
MathVector<3>(0.50000000000000000000000000000000, 0.50000000000000000000000000000000, 0.90630716704981324819618779868987),
MathVector<3>(0.50000000000000000000000000000000, 0.90630716704981324819618779868987, 0.50000000000000000000000000000000),
MathVector<3>(0.90630716704981324819618779868987, 0.50000000000000000000000000000000, 0.50000000000000000000000000000000),
MathVector<3>(0.13266585650149599132680761506623, 0.13266585650149599132680761506623, 0.50000000000000000000000000000000),
MathVector<3>(0.13266585650149599132680761506623, 0.50000000000000000000000000000000, 0.13266585650149599132680761506623),
MathVector<3>(0.13266585650149599132680761506623, 0.50000000000000000000000000000000, 0.86733414349850400867319238493377),
MathVector<3>(0.13266585650149599132680761506623, 0.86733414349850400867319238493377, 0.50000000000000000000000000000000),
MathVector<3>(0.50000000000000000000000000000000, 0.13266585650149599132680761506623, 0.13266585650149599132680761506623),
MathVector<3>(0.50000000000000000000000000000000, 0.13266585650149599132680761506623, 0.86733414349850400867319238493377),
MathVector<3>(0.50000000000000000000000000000000, 0.86733414349850400867319238493377, 0.13266585650149599132680761506623),
MathVector<3>(0.50000000000000000000000000000000, 0.86733414349850400867319238493377, 0.86733414349850400867319238493377),
MathVector<3>(0.86733414349850400867319238493377, 0.13266585650149599132680761506623, 0.50000000000000000000000000000000),
MathVector<3>(0.86733414349850400867319238493377, 0.50000000000000000000000000000000, 0.13266585650149599132680761506623),
MathVector<3>(0.86733414349850400867319238493377, 0.50000000000000000000000000000000, 0.86733414349850400867319238493377),
MathVector<3>(0.86733414349850400867319238493377, 0.86733414349850400867319238493377, 0.50000000000000000000000000000000),
MathVector<3>(0.34330329774197263947711338472102, 0.34330329774197263947711338472102, 0.34330329774197263947711338472102),
MathVector<3>(0.34330329774197263947711338472102, 0.34330329774197263947711338472102, 0.65669670225802736052288661527898),
MathVector<3>(0.34330329774197263947711338472102, 0.65669670225802736052288661527898, 0.34330329774197263947711338472102),
MathVector<3>(0.34330329774197263947711338472102, 0.65669670225802736052288661527898, 0.65669670225802736052288661527898),
MathVector<3>(0.65669670225802736052288661527898, 0.34330329774197263947711338472102, 0.34330329774197263947711338472102),
MathVector<3>(0.65669670225802736052288661527898, 0.34330329774197263947711338472102, 0.65669670225802736052288661527898),
MathVector<3>(0.65669670225802736052288661527898, 0.65669670225802736052288661527898, 0.34330329774197263947711338472102),
MathVector<3>(0.65669670225802736052288661527898, 0.65669670225802736052288661527898, 0.65669670225802736052288661527898),
MathVector<3>(0.19916236790086864918279349710734, 0.19916236790086864918279349710734, 0.19916236790086864918279349710734),
MathVector<3>(0.19916236790086864918279349710734, 0.19916236790086864918279349710734, 0.80083763209913135081720650289266),
MathVector<3>(0.19916236790086864918279349710734, 0.80083763209913135081720650289266, 0.19916236790086864918279349710734),
MathVector<3>(0.19916236790086864918279349710734, 0.80083763209913135081720650289266, 0.80083763209913135081720650289266),
MathVector<3>(0.80083763209913135081720650289266, 0.19916236790086864918279349710734, 0.19916236790086864918279349710734),
MathVector<3>(0.80083763209913135081720650289266, 0.19916236790086864918279349710734, 0.80083763209913135081720650289266),
MathVector<3>(0.80083763209913135081720650289266, 0.80083763209913135081720650289266, 0.19916236790086864918279349710734),
MathVector<3>(0.80083763209913135081720650289266, 0.80083763209913135081720650289266, 0.80083763209913135081720650289266),
MathVector<3>(0.07227211949112000766245426465483, 0.07227211949112000766245426465483, 0.07227211949112000766245426465483),
MathVector<3>(0.07227211949112000766245426465483, 0.07227211949112000766245426465483, 0.92772788050887999233754573534517),
MathVector<3>(0.07227211949112000766245426465483, 0.92772788050887999233754573534517, 0.07227211949112000766245426465483),
MathVector<3>(0.07227211949112000766245426465483, 0.92772788050887999233754573534517, 0.92772788050887999233754573534517),
MathVector<3>(0.92772788050887999233754573534517, 0.07227211949112000766245426465483, 0.07227211949112000766245426465483),
MathVector<3>(0.92772788050887999233754573534517, 0.07227211949112000766245426465483, 0.92772788050887999233754573534517),
MathVector<3>(0.92772788050887999233754573534517, 0.92772788050887999233754573534517, 0.07227211949112000766245426465483),
MathVector<3>(0.92772788050887999233754573534517, 0.92772788050887999233754573534517, 0.92772788050887999233754573534517),
MathVector<3>(0.02937757139469836804442492118443, 0.02937757139469836804442492118443, 0.32304859270168493254484356459355),
MathVector<3>(0.02937757139469836804442492118443, 0.02937757139469836804442492118443, 0.67695140729831506745515643540645),
MathVector<3>(0.02937757139469836804442492118443, 0.32304859270168493254484356459355, 0.02937757139469836804442492118443),
MathVector<3>(0.02937757139469836804442492118443, 0.32304859270168493254484356459355, 0.97062242860530163195557507881557),
MathVector<3>(0.02937757139469836804442492118443, 0.67695140729831506745515643540645, 0.02937757139469836804442492118443),
MathVector<3>(0.02937757139469836804442492118443, 0.67695140729831506745515643540645, 0.97062242860530163195557507881557),
MathVector<3>(0.02937757139469836804442492118443, 0.97062242860530163195557507881557, 0.32304859270168493254484356459355),
MathVector<3>(0.02937757139469836804442492118443, 0.97062242860530163195557507881557, 0.67695140729831506745515643540645),
MathVector<3>(0.32304859270168493254484356459355, 0.02937757139469836804442492118443, 0.02937757139469836804442492118443),
MathVector<3>(0.32304859270168493254484356459355, 0.02937757139469836804442492118443, 0.97062242860530163195557507881557),
MathVector<3>(0.32304859270168493254484356459355, 0.97062242860530163195557507881557, 0.02937757139469836804442492118443),
MathVector<3>(0.32304859270168493254484356459355, 0.97062242860530163195557507881557, 0.97062242860530163195557507881557),
MathVector<3>(0.67695140729831506745515643540645, 0.02937757139469836804442492118443, 0.02937757139469836804442492118443),
MathVector<3>(0.67695140729831506745515643540645, 0.02937757139469836804442492118443, 0.97062242860530163195557507881557),
MathVector<3>(0.67695140729831506745515643540645, 0.97062242860530163195557507881557, 0.02937757139469836804442492118443),
MathVector<3>(0.67695140729831506745515643540645, 0.97062242860530163195557507881557, 0.97062242860530163195557507881557),
MathVector<3>(0.97062242860530163195557507881557, 0.02937757139469836804442492118443, 0.32304859270168493254484356459355),
MathVector<3>(0.97062242860530163195557507881557, 0.02937757139469836804442492118443, 0.67695140729831506745515643540645),
MathVector<3>(0.97062242860530163195557507881557, 0.32304859270168493254484356459355, 0.02937757139469836804442492118443),
MathVector<3>(0.97062242860530163195557507881557, 0.32304859270168493254484356459355, 0.97062242860530163195557507881557),
MathVector<3>(0.97062242860530163195557507881557, 0.67695140729831506745515643540645, 0.02937757139469836804442492118443),
MathVector<3>(0.97062242860530163195557507881557, 0.67695140729831506745515643540645, 0.97062242860530163195557507881557),
MathVector<3>(0.97062242860530163195557507881557, 0.97062242860530163195557507881557, 0.32304859270168493254484356459355),
MathVector<3>(0.97062242860530163195557507881557, 0.97062242860530163195557507881557, 0.67695140729831506745515643540645),
MathVector<3>(0.01745016724364486853485908843733, 0.27460003244274528481105782713487, 0.27460003244274528481105782713487),
MathVector<3>(0.01745016724364486853485908843733, 0.27460003244274528481105782713487, 0.72539996755725471518894217286513),
MathVector<3>(0.01745016724364486853485908843733, 0.72539996755725471518894217286513, 0.27460003244274528481105782713487),
MathVector<3>(0.01745016724364486853485908843733, 0.72539996755725471518894217286513, 0.72539996755725471518894217286513),
MathVector<3>(0.27460003244274528481105782713487, 0.01745016724364486853485908843733, 0.27460003244274528481105782713487),
MathVector<3>(0.27460003244274528481105782713487, 0.01745016724364486853485908843733, 0.72539996755725471518894217286513),
MathVector<3>(0.27460003244274528481105782713487, 0.27460003244274528481105782713487, 0.01745016724364486853485908843733),
MathVector<3>(0.27460003244274528481105782713487, 0.27460003244274528481105782713487, 0.98254983275635513146514091156267),
MathVector<3>(0.27460003244274528481105782713487, 0.72539996755725471518894217286513, 0.01745016724364486853485908843733),
MathVector<3>(0.27460003244274528481105782713487, 0.72539996755725471518894217286513, 0.98254983275635513146514091156267),
MathVector<3>(0.27460003244274528481105782713487, 0.98254983275635513146514091156267, 0.27460003244274528481105782713487),
MathVector<3>(0.27460003244274528481105782713487, 0.98254983275635513146514091156267, 0.72539996755725471518894217286513),
MathVector<3>(0.72539996755725471518894217286513, 0.01745016724364486853485908843733, 0.27460003244274528481105782713487),
MathVector<3>(0.72539996755725471518894217286513, 0.01745016724364486853485908843733, 0.72539996755725471518894217286513),
MathVector<3>(0.72539996755725471518894217286513, 0.27460003244274528481105782713487, 0.01745016724364486853485908843733),
MathVector<3>(0.72539996755725471518894217286513, 0.27460003244274528481105782713487, 0.98254983275635513146514091156267),
MathVector<3>(0.72539996755725471518894217286513, 0.72539996755725471518894217286513, 0.01745016724364486853485908843733),
MathVector<3>(0.72539996755725471518894217286513, 0.72539996755725471518894217286513, 0.98254983275635513146514091156267),
MathVector<3>(0.72539996755725471518894217286513, 0.98254983275635513146514091156267, 0.27460003244274528481105782713487),
MathVector<3>(0.72539996755725471518894217286513, 0.98254983275635513146514091156267, 0.72539996755725471518894217286513),
MathVector<3>(0.98254983275635513146514091156267, 0.27460003244274528481105782713487, 0.27460003244274528481105782713487),
MathVector<3>(0.98254983275635513146514091156267, 0.27460003244274528481105782713487, 0.72539996755725471518894217286513),
MathVector<3>(0.98254983275635513146514091156267, 0.72539996755725471518894217286513, 0.27460003244274528481105782713487),
MathVector<3>(0.98254983275635513146514091156267, 0.72539996755725471518894217286513, 0.72539996755725471518894217286513)
};




template <>
FlexGaussQuadrature<ReferenceHexahedron>::FlexGaussQuadrature(int order)
{
	switch(order)
	{
	case 0:
	case 1:
	case 2:
		m_order = GaussQuadrature<ReferenceHexahedron, 2>::order();
		m_numPoints = GaussQuadrature<ReferenceHexahedron, 2>::size();
		m_pvPoint = GaussQuadrature<ReferenceHexahedron, 2>::points();
		m_pvWeight = GaussQuadrature<ReferenceHexahedron, 2>::weights();
		break;

	case 3:
		m_order = GaussQuadrature<ReferenceHexahedron, 3>::order();
		m_numPoints = GaussQuadrature<ReferenceHexahedron, 3>::size();
		m_pvPoint = GaussQuadrature<ReferenceHexahedron, 3>::points();
		m_pvWeight = GaussQuadrature<ReferenceHexahedron, 3>::weights();
		break;

	case 4:
	case 5:
		m_order = GaussQuadrature<ReferenceHexahedron, 5>::order();
		m_numPoints = GaussQuadrature<ReferenceHexahedron, 5>::size();
		m_pvPoint = GaussQuadrature<ReferenceHexahedron, 5>::points();
		m_pvWeight = GaussQuadrature<ReferenceHexahedron, 5>::weights();
		break;

	case 6:
	case 7:
		m_order = GaussQuadrature<ReferenceHexahedron, 7>::order();
		m_numPoints = GaussQuadrature<ReferenceHexahedron, 7>::size();
		m_pvPoint = GaussQuadrature<ReferenceHexahedron, 7>::points();
		m_pvWeight = GaussQuadrature<ReferenceHexahedron, 7>::weights();
		break;

	case 8:
		m_order = GaussQuadrature<ReferenceHexahedron, 8>::order();
		m_numPoints = GaussQuadrature<ReferenceHexahedron, 8>::size();
		m_pvPoint = GaussQuadrature<ReferenceHexahedron, 8>::points();
		m_pvWeight = GaussQuadrature<ReferenceHexahedron, 8>::weights();
		break;

	case 9:
		m_order = GaussQuadrature<ReferenceHexahedron, 9>::order();
		m_numPoints = GaussQuadrature<ReferenceHexahedron, 9>::size();
		m_pvPoint = GaussQuadrature<ReferenceHexahedron, 9>::points();
		m_pvWeight = GaussQuadrature<ReferenceHexahedron, 9>::weights();
		break;

	case 10:
	case 11:
		m_order = GaussQuadrature<ReferenceHexahedron, 11>::order();
		m_numPoints = GaussQuadrature<ReferenceHexahedron, 11>::size();
		m_pvPoint = GaussQuadrature<ReferenceHexahedron, 11>::points();
		m_pvWeight = GaussQuadrature<ReferenceHexahedron, 11>::weights();
		break;

	default: UG_THROW("Order "<<order<<" not available for GaussQuadrature of hexahedron.");
	}
}
}; // namespace ug

